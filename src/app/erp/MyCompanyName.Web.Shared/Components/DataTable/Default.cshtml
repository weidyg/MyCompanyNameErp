@model DataTableViewComponentModel
@inject IStringLocalizer<WebSharedResource> L

<a-app id="@Model.Id" class="st-data-table">
    @{
        var TableContent = Tag.Template(
        @<a-layout>
            <a-layout-sider v-if="querys && querys.length>1"
                            :trigger="null"
                            theme="light"
                            collapsible
                            collapsed-width="0"
                            v-model:collapsed="search.collapsed"
                            class="st-data-table-search">

                <div class="st-data-table-search-title">
                    <h1>@L["SearchIerms"]</h1>
                </div>
                <a-form ref="formRef" :model="queryForm" style="margin: 0 8px;">
                    <a-form-item v-for="query in querys" :key="query.field" :name="query.field">
                        <span v-if="false">

                        </span>
                        <a-input v-else
                                 :placeholder="'@L["PleaseInput"]'+query.label"
                                 v-model:value="queryForm[query.field]"
                                 allow-clear>
                            <template #prefix>
                                <b>{{query.label}}</b>
                            </template>
                        </a-input>
                    </a-form-item>
                </a-form>

                <div class="st-data-table-search-btn">
                    <a-button type="primary" :loading="search.loading" block v-on:click.prevent="onSearch">
                        <template #icon>
                            <i class="fa fa-search" style="margin-right:4px"></i>
                        </template>
                        @L["Search"]
                    </a-button>
                </div>

            </a-layout-sider>

            <a-layout-content class="st-data-table-content">

                <div v-if="querys && querys.length>1" class="st-data-table-search-trigger"
                     v-on:click="search.togele">
                    <span class="st-data-table-search-trigger-icon">
                        <i :class="search.collapsed?'fa fa-angle-right':'fa fa-angle-left'"></i>
                    </span>
                </div>

                <a-row type="flex" justify="space-between" style="margin-bottom:8px">
                    <a-col flex="auto">
                        <a-space v-if="actions && actions.length>0"
                                 align="center">
                            <template v-for="(action, index) in actions" :key="index">
                                <a-dropdown v-if="action.isGroup && action.visible !== false">
                                    <template #overlay>
                                        <a-menu>
                                            <template v-for="(subAction, index) in action.items"
                                                      :key="index">
                                                <a-menu-item v-if="subAction.visible !== false"
                                                             v-on:click="subAction.onClick">
                                                    <i v-if="subAction.icon" :class="subAction.icon" style="margin-right:4px"></i>
                                                    {{subAction.text}}
                                                </a-menu-item>
                                            </template>
                                        </a-menu>
                                    </template>
                                    <a-button :loading="action.loading"
                                              :type="action.type">
                                        <template #icon v-if="action.icon">
                                            <i :class="action.icon" style="margin-right:4px"></i>
                                        </template>
                                        {{action.text}}
                                        <i style="padding:5px;" class="fa fa-angle-down"></i>
                                    </a-button>
                                </a-dropdown>
                                <a-button v-else-if="action.visible !== false"
                                          :loading="action.loading"
                                          :type="action.type"
                                          v-on:click="action.onClick">
                                    <template #icon v-if="action.icon">
                                        <i :class="action.icon" style="margin-right:4px"></i>
                                    </template>
                                    {{action.text}}
                                </a-button>
                            </template>
                        </a-space>
                    </a-col>
                    <a-col flex="220px" v-if="querys && querys.length==1">
                        <template v-for="query in querys" :key="query.field" :name="query.field">
                            <a-input-search v-model:value="queryForm[query.field]"
                                            :placeholder="'@L["PleaseInput"]'+query.label"
                                            allow-clear
                                            enter-button
                                            v-on:search="onSearch" />
                        </template>

                    </a-col>
                    <a-col flex="60px">
                        <a-space :size="22" style="margin: auto 22px;height:100%;">
                            <a-tooltip title="@L["Refresh"]">
                                <i :class="['fa','fa-refresh',(loading?'fa-spin':'')]"
                                   v-on:click.prevent="reload({tips:true})"
                                   style="cursor:pointer;"></i>
                            </a-tooltip>
                            <a-tooltip title="@L["ColumnSettings"]">
                                <a-dropdown :trigger="['click']" v-model:visible="columnSet.visible">
                                    <i class="fa fa-cog" style="cursor:pointer;"></i>
                                    <template #overlay>
                                        <a-menu>
                                            <a-menu-item>
                                                <a-checkbox :checked="columnSet.checked"
                                                            v-on:click="columnSet.click"
                                                            :indeterminate="columnSet.indeterminate">
                                                    @L["ColumnDisplay"]
                                                </a-checkbox>
                                                <a-button type="link"
                                                          v-on:click="columnSet.reset">
                                                    @L["Reset"]
                                                </a-button>
                                            </a-menu-item>
                                            <span v-for="(column,index) in columns" :key="index"
                                                  v-on:dragenter="columnSet.ondragenter"
                                                  v-on:dragover="columnSet.ondragover"
                                                  v-on:dragleave="columnSet.ondragleave"
                                                  v-on:drop="columnSet.ondrop($event, index)">
                                                <a-menu-item v-if="column.title"
                                                             draggable="true"
                                                             v-on:dragstart="columnSet.ondragstart($event, index, column)"
                                                             v-on:drag="columnSet.ondrag"
                                                             v-on:dragend="columnSet.ondragend">
                                                    <a-checkbox v-model:checked="column.visible">
                                                        <span style="cursor: move;">
                                                            {{  column.title}}
                                                        </span>
                                                    </a-checkbox>
                                                </a-menu-item>
                                            </span>
                                        </a-menu>
                                    </template>
                                </a-dropdown>
                            </a-tooltip>
                        </a-space>
                    </a-col>
                </a-row>

                <a-table ref="tableRef"
                         :row-key="rowKey"
                         :loading="loading"
                         :locale="tableLocale"
                         :columns="columns.filter(f=>f.visible)"
                         :data-source="dataSource"
                         :scroll="scroll"
                         :pagination="pagination"
                         :row-selection="rowSelection"
                         v-on:change="onChange"
                         size="small" bordered>
                    @foreach (var item in Model.Templates)
                    {
                        var slot = $"#{item.Name}=\"{{text,record,column}}\"";
                        <template @Html.Raw(slot)>
                            @item.Template
                            <template v-if="column.actions&&column.actions.length>0">
                                <template v-for="(action,index) in column.actions" :key="'action'+index">
                                    <template v-if="action.visible!==false">
                                        <a-popconfirm v-if="action.confirm" :title="action.confirm" v-on:confirm="action.onClick(record)">
                                            <a-button size="small" type="danger">{{action.title}}</a-button>
                                        </a-popconfirm>
                                        <a-button v-else size="small" type="primary"
                                                  v-on:click="action.onClick(record)">{{action.title}}</a-button>
                                    </template>
                                </template>
                            </template>
                        </template>
                    }
                    @if (Model.Templates.All(a => a.Name != "operation"))
                    {
                        <template #operation="{text,record,column}">
                            <template v-if="column.actions&&column.actions.length>0">
                                <a-space>
                                    <template v-for="(action,index) in column.actions" :key="'action'+index">
                                        <template v-if="action.visible!==false">
                                            <a-popconfirm v-if="action.confirm" :title="action.confirm" v-on:confirm="action.onClick(record)">
                                                <a-button size="small" type="danger">{{action.title}}</a-button>
                                            </a-popconfirm>
                                            <a-button v-else size="small"
                                                      type="primary"
                                                      :loading="action[`loading${record.index}`]"
                                                      v-on:click="action.onClick(record)">
                                                {{action.title}}
                                            </a-button>
                                        </template>
                                    </template>
                                </a-space>
                            </template>
                        </template>
                    }
                    @if (Model.Templates.All(a => a.Name != "index"))
                    {
                        <template #index="{text,record,column}">
                            {{record.index}}
                        </template>
                    }
                    @if (Model.Templates.All(a => a.Name != "isActive"))
                    {
                        <template #isActive="{text,record,column}">
                            <a-switch checked-children="@L["Enable"]"
                                      un-checked-children="@L["Disable"]"
                                      v-model:checked="text"
                                      v-on:click="(checked)=>OnUpdateActive(record,checked)" />
                        </template>
                    }
                    @if (Model.Templates.All(a => a.Name != "isDefault"))
                    {
                        <template #isDefault="{text,record,column}">
                            <a-checkbox v-model:checked="text" v-on:click="(ev)=>OnUpdateIsDefault(record,ev)" />
                        </template>
                    }
                    @if (Model.Templates.All(a => a.Name != "datetime"))
                    {
                        <template #datetime="{text,record,column}">
                            {{ formatDateTime(text)}}
                        </template>
                    }
                </a-table>
            </a-layout-content>
        </a-layout>);
    }
    @TableContent
    @*<a-layout>
            <a-layout-sider theme="light" class="st-data-table-left-tree">
                <div class="tree-header">
                    <span>组织单元</span>
                    <div class="tree-search">
                        <div class="tree-search-input">
                            <a-input-search size="small"
                                            v-model:value="leftTree.searchValue"
                                            placeholder="@L["Search"]"
                                            v-on:search="leftTree.onSearch"
                                            allow-clear />
                        </div>
                        <a-dropdown>
                            <i class="fa fa-ellipsis-v" style="cursor:pointer"></i>
                            <template #overlay>
                                <a-menu>
                                    <a-menu-item>
                                        <a v-on:click="()=>leftTree.onExpanded(true)">展开全部</a>
                                    </a-menu-item>
                                    <a-menu-item>
                                        <a v-on:click="()=>leftTree.onExpanded(false)">折叠全部</a>
                                    </a-menu-item>
                                </a-menu>
                            </template>
                        </a-dropdown>
                    </div>
                </div>
                <a-tree v-model:expanded-keys="leftTree.expandedKeys"
                        v-model:selected-keys="leftTree.selectedKeys"
                        :auto-expand-parent="leftTree.autoExpandParent"
                        :tree-data="leftTree.treeData"
                        v-on:expand="leftTree.onExpand"
                        block-node>
                    <template #title="{ title }">
                        <span v-if="title.indexOf(leftTree.searchValue) > -1">
                            {{ title.substr(0, title.indexOf(leftTree.searchValue)) }}
                            <span style="color: #f50">{{ leftTree.searchValue }}</span>
                            {{ title.substr(title.indexOf(leftTree.searchValue) + leftTree.searchValue.length) }}
                        </span>
                        <span v-else>{{ title }}</span>
                    </template>
                </a-tree>
            </a-layout-sider>
            <a-layout-content>

            </a-layout-content>
        </a-layout>*@
</a-app>